{"index.js":"var money=[\n{type: \"ONE HUNDRED\", value: 100},\n{type: \"TWENTY\", value: 20},\n{type: \"TEN\", value: 10},\n{type: \"FIVE\", value: 5},\n{type: \"ONE\", value: 1},\n{type: \"QUARTER\", value: 0.25},\n{type: \"DIME\", value: 0.10},\n{type: \"NICKEL\", value: 0.05},\n{type: \"PENNY\", value: 0.01}\n];\n\nfunction checkCashRegister(price, cash, cid) {\n  var change=cash-price;\n  // Here is your change, ma'am.\n\nvar changeObj={\n  status: \"\",\n  change:[]\n};\n\n//put cash register in order from greatest value bill/coin to least\ncid=cid.reverse();\n\n//find total amount in drawer\nvar drawerTotal=0;\nfor (var i=0; i<cid.length; i++){\n  drawerTotal+=cid[i][1];\n}\ndrawerTotal=Math.round(drawerTotal*100)/100;\n\n//not enough money in drawer\nif(drawerTotal<change){\nchangeObj.status=\"INSUFFICIENT_FUNDS\";\n}\n//exact change in drawer\nif(drawerTotal===change){\nchangeObj.status=\"CLOSED\";\nchangeObj.change=cid.reverse();\n}\n\n//creating change\nif(drawerTotal>change){\nvar changeCount=Math.round(change*100)/100;\nfor (var i=0; i<money.length; i++){\n\nif(changeCount >= money[i].value){\n  var amountNeeded=Math.floor(changeCount/money[i].value)*money[i].value;\n  var amountAvail=cid[i][1];\nif(amountAvail>=amountNeeded){\n  changeObj.change.push([money[i].type, amountNeeded]);\n  changeCount=Math.round((changeCount-amountNeeded)*100)/100;\n}\n\nelse{\n  changeObj.change.push([money[i].type, amountAvail]);\n  changeCount-=amountAvail;\n}\n}\n}\n//check if change is enough\nif(changeCount<.01){\n  changeObj.status = \"OPEN\";\n}\nelse{\n  changeObj.status=\"INSUFFICIENT_FUNDS\";\n  changeObj.change=[];\n}\n}\n\nconsole.log(changeObj.status);\nconsole.log(changeObj.change);\nreturn changeObj;\n}\n\n// Example cash-in-drawer array:\n// [[\"PENNY\", 1.01],\n// [\"NICKEL\", 2.05],\n// [\"DIME\", 3.1],\n// [\"QUARTER\", 4.25],\n// [\"ONE\", 90],\n// [\"FIVE\", 55],\n// [\"TEN\", 20],\n// [\"TWENTY\", 60],\n// [\"ONE HUNDRED\", 100]]\n\ncheckCashRegister(3.26, 100, [[\"PENNY\", 1.01], [\"NICKEL\", 2.05], [\"DIME\", 3.1], [\"QUARTER\", 4.25], [\"ONE\", 90], [\"FIVE\", 55], [\"TEN\", 20], [\"TWENTY\", 60], [\"ONE HUNDRED\", 100]]);"}